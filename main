/* Becca Kheiry
 * ECE387
 * Alarm Clock assignment
 * This alarm clock code allows you to set the current time and alarm
 * time, then will keep time until the current time matches the alarm time.
 * The match will set off a piezo speaker (if connected) and one of the 
 * Arduino Uno's built-in LEDs as the alarm. 
 */

#include <stdio.h>

unsigned long startTime;
unsigned long currentTime;
int startHour;
int startMin;
int alarmHour;
int alarmMin;
const unsigned long oneMin = 60000; // we don't care about seconds here
const byte ledPin = 13;
const int buzzer = 8;

int getInt() {
  if (Serial.available() > 0) {
    int x = Serial.parseInt();  // get int value for times
    return x;
  }
  else getInt();                // loop until input is detected
}

char* formatTime(int y) {       // format time so there's a leading 0
  static char z[4];               // for numbers <10
  sprintf(z, "%02d", y);
  return z;
}

void alarm() {                  // loop alarm forever once triggered
  while (1) {
    digitalWrite(ledPin, HIGH);
    tone(8, 4000, 2000);
    delay(2000);
    digitalWrite(ledPin, LOW);
    delay(2000);
  }
}

void setup() {
  Serial.begin(9600);
  pinMode(ledPin, OUTPUT);
  pinMode(buzzer, OUTPUT);
  
  // have user set clock
  Serial.println("Please set the current hour (military time)");
  startHour = getInt();
  Serial.println("Please set the current minute");
  startMin = getInt();

  //Have user set alarm
  Serial.println("Please set the alarm hour (military time)");
  alarmHour = getInt();
  Serial.println("Please set the alarm minute");
  alarmMin = getInt();

  // start counting
  startTime = millis();

  //Display selections
  Serial.print("Current time: ");
  Serial.print(formatTime(startHour));
  Serial.print(":");
  Serial.println(formatTime(startMin));
  Serial.print("Alarm time: ");
  Serial.print(formatTime(alarmHour));
  Serial.print(":");
  Serial.println(formatTime(alarmMin));
}

void loop() {
  currentTime = millis(); // check time each loop

  // increment time each minute
  if ((currentTime - startTime) >= oneMin)
  {
    startMin++;
    // check for alarm match
    if ((startMin == alarmMin) && (startHour == alarmHour)) {
      alarm();
    }
    else if (startMin == 60) {
      startMin = 0;
      startHour++;
    }
    if ((startMin == alarmMin) && (startHour == alarmHour)) {
      alarm();
    }
    // reset at midnight
    else if (startHour == 24) {
      startHour = 0;
    }
    // print time every minute (or comment out if desired)
    Serial.print(formatTime(startHour));
    Serial.print(":");
    Serial.println(formatTime(startMin));
    startTime = currentTime;
  }
}
